
--
-- This currently does tests for dark mode only
-- Tests related to interface changes , server side
--

-- PROBLEMS:
-- TODO

local function set_checkbox_as_admin(panel, is_checked)
  call_as_admin(function()
    panel:SetChecked(is_checked)
    panel:RefreshConVar()
  end)
end

insulate("sv - Server Mode On - admin", function()
  _set_player_admin(true)
  local dermaBase, media = create_with_dark_mode()
  init_sv_shared_settings()
  it("setup assert rules", function()
      assert.set_derma(dermaBase)
  end)
  dermaBase.main:SwitchMode()
  describe("admin access off", function()
    set_checkbox_as_admin(dermaBase.cbadminaccess, false)
    it("enable normal ui", function()
      assert.are.equal(dermaBase.cbadminaccess:GetChecked(), false)
      assert.same(dermaBase.main.buttonMode:GetText(), "SERVER")
      assert.same(dermaBase.buttonplay.text, "Play / AutoPlay")
      assert.same(dermaBase.buttonpause.text, "Pause / Loop")
      assert.are.equal(dermaBase.buttonstop:IsVisible(), true)
      assert.are.equal(dermaBase.buttonswap:IsVisible(), false)
    end)
  end)
  describe("admin access on", function()
    set_checkbox_as_admin(dermaBase.cbadminaccess, true)
    it("enable normal ui", function()
      assert.are.equal(dermaBase.cbadminaccess:GetChecked(), true)
      assert.same(dermaBase.main.buttonMode:GetText(), "SERVER")
      assert.same(dermaBase.buttonplay.text, "Play / AutoPlay")
      assert.same(dermaBase.buttonpause.text, "Pause / Loop")
      assert.are.equal(dermaBase.buttonstop:IsVisible(), true)
      assert.are.equal(dermaBase.buttonswap:IsVisible(), false)
    end)
  end)
end)

insulate("sv - Server Mode On - non_admin", function()
  _set_player_admin(false)
  local dermaBase, media = create_with_dark_mode()
  init_sv_shared_settings()
  it("setup assert rules", function()
      assert.set_derma(dermaBase)
  end)
  dermaBase.main:SwitchMode()
  describe("admin access off", function()
    set_checkbox_as_admin(dermaBase.cbadminaccess, false)
    it("enable normal ui", function()
      assert.are.equal(dermaBase.cbadminaccess:GetChecked(), false)
      assert.same(dermaBase.main.buttonMode:GetText(), "SERVER")
      assert.same(dermaBase.buttonplay.text, "Play / AutoPlay")
      assert.same(dermaBase.buttonpause.text, "Pause / Loop")
      assert.are.equal(dermaBase.buttonstop:IsVisible(), true)
      assert.are.equal(dermaBase.buttonswap:IsVisible(), false)
    end)
  end)
  describe("admin access on", function()
    set_checkbox_as_admin(dermaBase.cbadminaccess, true)
    it("enable listen ui", function()
      assert.are.equal(dermaBase.cbadminaccess:GetChecked(), true)
      assert.same(dermaBase.main.buttonMode:GetText(), "SERVER")
      assert.same(dermaBase.buttonplay.text, "Resume Live")
      assert.same(dermaBase.buttonpause.text, "Pause")
      assert.are.equal(dermaBase.buttonstop:IsVisible(), false)
      assert.are.equal(dermaBase.buttonswap:IsVisible(), true)
    end)
  end)
end)



insulate("sv - Play On Click", function()
  _set_player_admin(true)
  local dermaBase, media = create_with_dark_mode()
  init_sv_shared_settings()
  it("setup assert rules", function()
      assert.set_derma(dermaBase)
  end)
  describe("play", function()
      set_checkbox_as_admin(dermaBase.cbadminaccess, true)
      dermaBase.main:SwitchMode()
      local song_line = 2
      it("is playing", function()
        dermaBase.buttonplay:DoClick(nil, song_line)
        assert.is_false(media.sv_PlayingSong.isPaused)
        assert.is_true(media.sv_PlayingSong.isPlaying)
        assert.is_false(media.sv_PlayingSong.isStopped)
        assert.is_false(media.sv_PlayingSong.isLooped)
        assert.is_false(media.sv_PlayingSong.isAutoPlaying)
      end)
      it("update media data", function()
        assert.same(media.sv_PlayingSong.title_song, "Example2")
        assert.same(media.sv_PlayingSong.song,"sound/folder1/Example2.mp3")
        assert.same(media.sv_PlayingSong.title_status, " Playing: ")
      end)
      it("update derma ui", function()
        assert.ui_top_bar_color(0, "Example2")
        assert.same(dermaBase.main.buttonMode:GetText(), "SERVER")
      end)
      it("song list highlight line", function()
        assert.line_highlight(0, media.sv_PlayingSong, song_line, 0)
      end)
  end)
end)


--------------------------------------------------------------------------------
insulate("sv - Play", function()
  local dermaBase, media = create_with_dark_mode()
  assert.set_derma(dermaBase)
  init_sv_shared_settings()
  dermaBase.main:SwitchMode()
  sh_play(dermaBase, media.sv_PlayingSong)
  it("server mode ui button", function()
    assert.same(dermaBase.main.buttonMode:GetText(), "SERVER")
  end)
end)
insulate("sv - Play different after play", function()
  local dermaBase, media = create_with_dark_mode()
  assert.set_derma(dermaBase)
  init_sv_shared_settings()
  dermaBase.main:SwitchMode()
  sh_play_play_different(dermaBase, media.sv_PlayingSong)
end)
insulate("sv - Play after pause", function()
  local dermaBase, media = create_with_dark_mode()
  assert.set_derma(dermaBase)
  init_sv_shared_settings()
  dermaBase.main:SwitchMode()
  sh_pause_play(dermaBase, media.sv_PlayingSong)
end)
insulate("sv - Play after autoplay", function()
  local dermaBase, media = create_with_dark_mode()
  assert.set_derma(dermaBase)
  init_sv_shared_settings()
  dermaBase.main:SwitchMode()
  sh_play_autoplay_play(dermaBase, media.sv_PlayingSong)
end)
insulate("sv - Play same after play", function()
  local dermaBase, media = create_with_dark_mode()
  assert.set_derma(dermaBase)
  init_sv_shared_settings()
  dermaBase.main:SwitchMode()
  sh_play_restart(dermaBase, media.sv_PlayingSong)
end)
--------------------------------------------------------------------------------

insulate("sv - Pause after play", function()
  local dermaBase, media = create_with_dark_mode()
  assert.set_derma(dermaBase)
  init_sv_shared_settings()
  dermaBase.main:SwitchMode()
  sh_play_pause(dermaBase, media.sv_PlayingSong)
end)
insulate("sv - Pause after pause", function()
  local dermaBase, media = create_with_dark_mode()
  assert.set_derma(dermaBase)
  init_sv_shared_settings()
  dermaBase.main:SwitchMode()
  sh_pause_unpause(dermaBase, media.sv_PlayingSong)
end)
insulate("sv - Pause after loop", function()
  local dermaBase, media = create_with_dark_mode()
  assert.set_derma(dermaBase)
  init_sv_shared_settings()
  dermaBase.main:SwitchMode()
  sh_play_loop_pause(dermaBase, media.sv_PlayingSong)
end)
insulate("sv - Pause after autoplay", function()
  local dermaBase, media = create_with_dark_mode()
  assert.set_derma(dermaBase)
  init_sv_shared_settings()
  dermaBase.main:SwitchMode()
  sh_play_autoplay_pause(dermaBase, media.sv_PlayingSong)
end)
insulate("sv - Unpause after loop & pause", function()
  local dermaBase, media = create_with_dark_mode()
  assert.set_derma(dermaBase)
  init_sv_shared_settings()
  dermaBase.main:SwitchMode()
  sh_play_loop_pause_unpause(dermaBase, media.sv_PlayingSong)
end)
insulate("sv - Unpause after autoplay & pause", function()
  local dermaBase, media = create_with_dark_mode()
  assert.set_derma(dermaBase)
  init_sv_shared_settings()
  dermaBase.main:SwitchMode()
  sh_play_autoplay_pause_unpause(dermaBase, media.sv_PlayingSong)
end)
--------------------------------------------------------------------------------

insulate("sv - Stop after play", function()
  local dermaBase, media = create_with_dark_mode()
  assert.set_derma(dermaBase)
  init_sv_shared_settings()
  dermaBase.main:SwitchMode()
  sh_play_stop(dermaBase, media.sv_PlayingSong)
end)
insulate("sv - Stop after pause", function()
  local dermaBase, media = create_with_dark_mode()
  assert.set_derma(dermaBase)
  init_sv_shared_settings()
  dermaBase.main:SwitchMode()
  sh_play_pause_stop(dermaBase, media.sv_PlayingSong)
end)
insulate("sv - Stop after unpause", function()
  local dermaBase, media = create_with_dark_mode()
  assert.set_derma(dermaBase)
  init_sv_shared_settings()
  dermaBase.main:SwitchMode()
  sh_play_pause_unpause_stop(dermaBase, media.sv_PlayingSong)
end)
--------------------------------------------------------------------------------

insulate("sv - Loop after play", function()
  local dermaBase, media = create_with_dark_mode()
  assert.set_derma(dermaBase)
  init_sv_shared_settings()
  dermaBase.main:SwitchMode()
  sh_play_loop(dermaBase, media.sv_PlayingSong)
end)
insulate("sv - Loop after pause", function()
  local dermaBase, media = create_with_dark_mode()
  assert.set_derma(dermaBase)
  init_sv_shared_settings()
  dermaBase.main:SwitchMode()
  sh_play_pause_loop(dermaBase, media.sv_PlayingSong)
end)
--------------------------------------------------------------------------------

insulate("sv - Autoplay after play", function()
  local dermaBase, media = create_with_dark_mode()
  assert.set_derma(dermaBase)
  init_sv_shared_settings()
  dermaBase.main:SwitchMode()
  sh_play_autoplay(dermaBase, media.sv_PlayingSong)
end)
insulate("sv - Autoplay while seek end", function()
  local dermaBase, media = create_with_dark_mode()
  assert.set_derma(dermaBase)
  init_sv_shared_settings()
  dermaBase.main:SwitchMode()
  sh_play_autoplay_seekend(dermaBase, media.sv_PlayingSong)
end)
--------------------------------------------------------------------------------